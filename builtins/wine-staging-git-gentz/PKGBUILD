# Maintainer: Freya Gentz <zegentzy@protonmail.com>
# Contributor: Daniel Bermond < gmail-com: danielbermond >
# Contributor: Felix Yan <felixonmars@archlinux.org>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Eduardo Romero <eduardo@archlinux.org>
# Contributor: Giovanni Scafora <giovanni@archlinux.org>

pkgname=wine-staging-git-gentz
pkgver=4.18.r5.gbc4e00ae+wine.4.18.r186.g5b62f89baa
pkgrel=1
pkgdesc='A compatibility layer for running Windows programs - Staging branch'
arch=('x86_64')
url='http://www.wine-staging.com'
license=(LGPL)
groups=('gentz_custom')

depends=(
    'attr'          'lib32-attr'
    'fontconfig'    'lib32-fontconfig'
    'lcms2'         'lib32-lcms2'
    'libxml2'       'lib32-libxml2'
    'libxcursor'    'lib32-libxcursor'
    'libxrandr'     'lib32-libxrandr'
    'libxdamage'    'lib32-libxdamage'
    'libxi'         'lib32-libxi'
    'gettext'       'lib32-gettext'
    'freetype2'     'lib32-freetype2'
    'glu'           'lib32-glu'
    'libsm'         'lib32-libsm'
    'gcc-libs'      'lib32-gcc-libs'
    'libpcap'       'lib32-libpcap'
    'desktop-file-utils'
)

makedepends=(
    'autoconf' 'ncurses' 'bison' 'perl' 'fontforge' 'flex' 'git' 'sane'
    'libgphoto2' 'gsm' 'ffmpeg' 'samba' 'opencl-headers' 'gcc'
    'giflib'                'lib32-giflib'
    'libpng'                'lib32-libpng'
    'gnutls'                'lib32-gnutls'
    'libxinerama'           'lib32-libxinerama'
    'libxcomposite'         'lib32-libxcomposite'
    'libxmu'                'lib32-libxmu'
    'libxxf86vm'            'lib32-libxxf86vm'
    'libldap'               'lib32-libldap'
    'mpg123'                'lib32-mpg123'
    'openal'                'lib32-openal'
    'v4l-utils'             'lib32-v4l-utils'
    'alsa-lib'              'lib32-alsa-lib'
    'libxcomposite'         'lib32-libxcomposite'
    'mesa'                  'lib32-mesa'
    'mesa-libgl'            'lib32-mesa-libgl'
    'opencl-icd-loader'     'lib32-opencl-icd-loader'
    'libxslt'               'lib32-libxslt'
    'libpulse'              'lib32-libpulse'
    'libva'                 'lib32-libva'
    'gtk3'                  'lib32-gtk3'
    'gst-plugins-base-libs' 'lib32-gst-plugins-base-libs'
    'vulkan-icd-loader'     'lib32-vulkan-icd-loader'
    'sdl2'                  'lib32-sdl2'
    'vkd3d'                 'lib32-vkd3d'
)

optdepends=(
    'giflib'                'lib32-giflib'
    'libpng'                'lib32-libpng'
    'libldap'               'lib32-libldap'
    'gnutls'                'lib32-gnutls'
    'mpg123'                'lib32-mpg123'
    'openal'                'lib32-openal'
    'v4l-utils'             'lib32-v4l-utils'
    'libpulse'              'lib32-libpulse'
    'alsa-plugins'          'lib32-alsa-plugins'
    'alsa-lib'              'lib32-alsa-lib'
    'libjpeg-turbo'         'lib32-libjpeg-turbo'
    'libxcomposite'         'lib32-libxcomposite'
    'libxinerama'           'lib32-libxinerama'
    'ncurses'               'lib32-ncurses'
    'opencl-icd-loader'     'lib32-opencl-icd-loader'
    'libxslt'               'lib32-libxslt'
    'libva'                 'lib32-libva'
    'gtk3'                  'lib32-gtk3'
    'gst-plugins-base-libs' 'lib32-gst-plugins-base-libs'
    'vulkan-icd-loader'     'lib32-vulkan-icd-loader'
    'sdl2'                  'lib32-sdl2'
    'vkd3d'                 'lib32-vkd3d'
    'sane' 'libgphoto2' 'gsm' 'ffmpeg' 'cups' 'samba' 'dosbox'
)

    provides=(
    "wine=$(            printf '%s' "$pkgver" | sed 's/.*\+wine\.//')"
    "wine-wow64=$(      printf '%s' "$pkgver" | sed 's/.*\+wine\.//')"
    "wine-git=$(        printf '%s' "$pkgver" | sed 's/.*\+wine\.//')"
    "wine-staging=$(    printf '%s' "$pkgver" | sed 's/\+wine.*//')"
    "wine-staging-git=$(printf '%s' "$pkgver" | sed 's/\+wine.*//')"
)
conflicts=('wine' 'wine-wow64' 'wine-staging' 'wine-staging-git' 'wine-staging-gentz')
options=(staticlibs)
install=wine-staging.install
source=('git://source.winehq.org/git/wine.git'
        'git+https://github.com/wine-staging/wine-staging.git'
        '30-win32-aliases.conf'
        'wine-binfmt.conf')
sha512sums=('SKIP'
            'SKIP'
            '6e54ece7ec7022b3c9d94ad64bdf1017338da16c618966e8baf398e6f18f80f7b0576edf1d1da47ed77b96d577e4cbb2bb0156b0b11c183a0accf22654b0a2bb'
            'bdde7ae015d8a98ba55e84b86dc05aca1d4f8de85be7e4bd6187054bfe4ac83b5a20538945b63fb073caab78022141e9545685e4e3698c97ff173cf30859e285')
validpgpkeys=(5AC1A08B03BD7A313E0A955AF5E6E9EEB9461DD7
              DA23579A74D4AD9AF9D3F945CEFAC8EAAF17519D)

pkgver() {
    local _staging_tag
    local _staging_version
    local _wine_version

    cd wine-staging
    _staging_tag="$(git tag --sort='version:refname' | tail -n1 | sed 's/-/./g;s/^v//;s/\.rc/rc/')"
    _staging_version="$(git describe --long --tags \
                          | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//;s/\.rc/rc/' \
                          | sed "s/^latest.release/${_staging_tag}/")"
    cd "${srcdir}/wine"
    _wine_version="$(git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//;s/\.rc/rc/')"

    printf '%s+%s' "$_staging_version" "$_wine_version"
}

_do_version() {
    pushd "$1"
    git reset --hard HEAD
    git clean -xdf

    msg2 "Changing $1 to $2"
    git checkout "$2"
    popd
}

prepare() {
    mkdir wine-{32,64}-build

    while true; do
        _do_version wine "$(wine-staging/patches/patchinstall.sh --upstream-commit)"

        # apply wine-staging patchset
        pushd wine-staging/patches
        if ./patchinstall.sh DESTDIR="$srcdir/wine" --all; then
            popd
            break;
        else
            msg2 "Patches did not apply, retrying"
            _do_version .. "HEAD~"
            popd
        fi
    done

    sed 's|OpenCL/opencl.h|CL/opencl.h|g' -i wine/configure*
}

build() {
    # Doesn't compile without remove these flags as of 4.10
    export CFLAGS="${CFLAGS/-fno-plt/}"
    export LDFLAGS="${LDFLAGS/,-z,now/}"

    # https://bugs.winehq.org/show_bug.cgi?id=47750
    export CFLAGS="${CFLAGS/-ffast-math/}"
    # https://bugs.winehq.org/show_bug.cgi?id=47835
    export CFLAGS="${CFLAGS/-funroll-loops/}"

    cd "$srcdir"

    msg2 "Building Wine-64..."

    cd "$srcdir/wine-64-build"
    ../wine/configure \
        --prefix=/usr \
        --libdir=/usr/lib \
        --with-x \
        --with-gstreamer \
        --enable-win64 \
        --with-xattr

    make

    msg2 "Building Wine-32..."

    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
    cd "$srcdir/wine-32-build"
    ../wine/configure \
        --prefix=/usr \
        --with-x \
        --with-gstreamer \
        --with-xattr \
        --libdir=/usr/lib32 \
        --with-wine64="$srcdir/wine-64-build"

    make
}

package() {
    msg2 "Packaging Wine-32..."
    cd "$srcdir/wine-32-build"

    make prefix="$pkgdir/usr" \
        libdir="$pkgdir/usr/lib32" \
        dlldir="$pkgdir/usr/lib32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/wine-64-build"
    make prefix="$pkgdir/usr" \
        libdir="$pkgdir/usr/lib" \
        dlldir="$pkgdir/usr/lib/wine" install

    # Font aliasing settings for Win32 applications
    install -d "$pkgdir/etc/fonts/conf."{avail,d}
    install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/etc/fonts/conf.avail"
    ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/etc/fonts/conf.d/30-win32-aliases.conf"
    install -Dm 644 "$srcdir/wine-binfmt.conf" "$pkgdir/usr/lib/binfmt.d/wine.conf"
}
